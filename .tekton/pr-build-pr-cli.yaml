apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  name: build-pr-cli
  annotations:
    pipelinesascode.tekton.dev/on-comment: "^((/build-pr-cli)|(/test-multi.*\ build-pr-cli.*))$"
    pipelinesascode.tekton.dev/cancel-in-progress: "true"
    pipelinesascode.tekton.dev/on-cel-expression: |-
      (
        "pr-cli/**".pathChanged() ||
        ".tekton/pr-build-pr-cli.yaml".pathChanged()
      ) && ((
        event == "push" && (
          source_branch.matches("^(main|master|release-.*)$") ||
          target_branch.matches("^(main|master|release-.*)$") ||
          target_branch.startsWith("refs/tags/")
        )
      ) || (
        event == "pull_request" && (
          target_branch.matches("^(main|master|release-.*)$")
        )
      ))
    pipelinesascode.tekton.dev/max-keep-runs: "5"
spec:
  pipelineRef:
    resolver: hub
    params:
    - name: catalog
      value: alauda
    - name: type
      value: tekton
    - name: kind
      value: pipeline
    - name: name
      value: clone-image-build-test-scan
    - name: version
      value: "0.2"

  params:
    - name: git-url
      value: "{{ repo_url }}"
    - name: git-revision
      value: "{{ source_branch }}"
    - name: git-commit
      value: "{{ revision }}"

    - name: reuse-artifact
      value: "false"
    - name: image-repository
      value: build-harbor.alauda.cn/devops/toolbox/pr-cli
    - name: tags
      value:
        - latest
    - name: ignore-gitversion-tag
      value: "true"
    - name: dockerfile-path
      value: pr-cli/Dockerfile
    - name: context
      value: "./pr-cli"
    - name: build-extra-args
      value:
        - --build-arg VERSION=0.1
        - --build-arg GIT_COMMIT="{{ revision }}"
    - name: test-script
      value: |
        pr-cli --help

    - name: file-list-for-commit-sha
      value:
        - ./pr-cli
        - .tekton/pr-build-pr-cli.yaml

  workspaces:
    - name: source
      volumeClaimTemplate:
        spec:
          accessModes:
            - ReadWriteMany
          resources:
            requests:
              storage: 1Gi
    - name: dockerconfig
      secret:
        secretName: build-harbor.kauto.docfj
    - name: basic-auth
      secret:
        secretName: "{{ git_auth_secret }}"
    - name: gitversion-config
      configMap:
        name: gitversion-config

  taskRunTemplate:
    podTemplate:
      securityContext:
        runAsUser: 65532
        runAsGroup: 65532
        fsGroup: 65532
        fsGroupChangePolicy: "OnRootMismatch"
