# Example: Using Sealed Secrets for GitOps
# Install Sealed Secrets controller first:
# kubectl apply -f https://github.com/bitnami-labs/sealed-secrets/releases/download/v0.24.0/controller.yaml

# 1. Create a regular secret file (DO NOT commit this)
# cat > secret.yaml <<EOF
# apiVersion: v1
# kind: Secret
# metadata:
#   name: pr-cli-secrets
#   namespace: pr-cli
# type: Opaque
# stringData:
#   WEBHOOK_SECRET: "your-actual-webhook-secret"
#   PR_TOKEN: "ghp_your_actual_github_token"
# EOF

# 2. Seal the secret (this can be committed to Git)
# kubeseal -f secret.yaml -w sealed-secret.yaml

# 3. The sealed secret will look like this:
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  name: pr-cli-secrets
  namespace: pr-cli
spec:
  encryptedData:
    # These are encrypted values - safe to commit to Git
    # Replace with your actual sealed values from kubeseal
    WEBHOOK_SECRET: AgBxxx...encrypted...xxx
    PR_TOKEN: AgByyy...encrypted...yyy
  template:
    metadata:
      name: pr-cli-secrets
      namespace: pr-cli
    type: Opaque

